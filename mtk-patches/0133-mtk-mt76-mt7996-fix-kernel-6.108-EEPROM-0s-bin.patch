From a4bc4c9c439d6d747f4df58da184788d9c3f7247 Mon Sep 17 00:00:00 2001
From: Gilly1970 <gilroyscott@hotmail.com>
Date: Fri, 3 Oct 2025 14:49:11 +1000
Subject: [PATCH] 0133-mtk-mt76-mt7996-fix-kernel-6.106-EEPROM-0s-bin

---
 mt7996/eeprom.c | 71 +++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 71 insertions(+)

diff --git a/mt7996/eeprom.c b/mt7996/eeprom.c
index 612ff3f..997492d 100644
--- a/mt7996/eeprom.c
+++ b/mt7996/eeprom.c
@@ -209,6 +209,44 @@ static bool mt7996_eeprom_variant_valid(struct mt7996_dev *dev, const u8 *def)
 	return true;
 }
 
+static void
+mt7996_eeprom_fixup_tx_power(struct mt7996_dev *dev, const u8 *def)
+{
+	u8 *eeprom = dev->mt76.eeprom.data;
+	int i;
+	bool zeros_detected = false;
+	bool sixg_overridden = false;
+
+	if (!eeprom[MT_EE_TX0_POWER_2G]) {
+		eeprom[MT_EE_TX0_POWER_2G] = def[MT_EE_TX0_POWER_2G];
+		zeros_detected = true;
+	}
+
+	for (i = MT_EE_TX0_POWER_5G; i < MT_EE_TX0_POWER_5G + 5; ++i) {
+		if (!eeprom[i]) {
+			eeprom[i] = def[i];
+			zeros_detected = true;
+		}
+	}
+
+	/*
+	 * Unconditionally use default firmware values for the 6GHz band.
+	 * This is a workaround for hardware with incorrect (but non-zero)
+	 * tx_power values in the EEPROM.
+	 */
+	for (i = MT_EE_TX0_POWER_6G; i < MT_EE_TX0_POWER_6G + 8; ++i) {
+		if (eeprom[i] != def[i]) {
+			eeprom[i] = def[i];
+			sixg_overridden = true;
+		}
+	}
+
+	if (zeros_detected)
+		dev_warn(dev->mt76.dev, "eeprom tx_power zeros detected, using defaults\n");
+	if (sixg_overridden)
+		dev_warn(dev->mt76.dev, "Overriding 6GHz eeprom tx_power with firmware defaults\n");
+}
+
 static int
 mt7996_eeprom_check_or_use_default(struct mt7996_dev *dev, bool use_default)
 {
@@ -262,6 +300,9 @@ mt7996_eeprom_load_bin(struct mt7996_dev *dev)
 	memcpy(eeprom, fw->data, MT7996_EEPROM_SIZE);
 	dev->flash_mode = true;
 
+	/* Apply Tx Power fixups from default firmware EEPROM */
+	mt7996_eeprom_fixup_tx_power(dev, fw->data);
+
 out:
 	release_firmware(fw);
 	return ret;
@@ -367,6 +408,36 @@ static int mt7996_eeprom_load(struct mt7996_dev *dev)
 				goto out;
 			}
 		}
+
+		/* check for faulty EEPROM and load board-specific override */
+		u8 *eeprom = dev->mt76.eeprom.data;
+		if (!eeprom[MT_EE_TX0_POWER_2G] || !eeprom[MT_EE_TX0_POWER_5G] || !eeprom[MT_EE_TX0_POWER_6G] ) {
+			dev_warn(dev->mt76.dev, "Faulty EEPROM detected, attempting to load board-specific bin\n");
+
+			/* Set bin file mode and specify our custom file */
+			dev->bin_file_mode = true;
+			dev->mt76.bin_file_name = "mediatek/mt7996/bpi-r4-eeprom.bin";
+
+			/* Allocate memory for the eeprom data */
+			dev->mt76.eeprom.size = MT7996_EEPROM_SIZE;
+			if (!dev->mt76.eeprom.data)
+				dev->mt76.eeprom.data = devm_kzalloc(dev->mt76.dev,
+								     dev->mt76.eeprom.size,
+								     GFP_KERNEL);
+			if (!dev->mt76.eeprom.data)
+				return -ENOMEM;
+
+			/* Attempt to load our custom bin file */
+			if (mt7996_eeprom_load_bin(dev) == 0) {
+				dev_warn(dev->mt76.dev, "Successfully loaded board-specific EEPROM\n");
+				return 0; /* Success, exit function */
+			}
+
+			/* If custom bin fails, fall back to generic default */
+			dev_warn(dev->mt76.dev, "Board-specific EEPROM not found, using generic default\n");
+			use_default = true;
+			goto out;
+		}
 	}
 
 out:
-- 
2.43.0

